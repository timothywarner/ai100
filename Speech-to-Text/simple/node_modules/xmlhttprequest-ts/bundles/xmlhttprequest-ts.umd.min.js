!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?factory(exports,require("fs"),require("http"),require("https"),require("url"),require("os"),require("path"),require("child_process")):"function"==typeof define&&define.amd?define("xmlhttprequest-ts",["exports","fs","http","https","url","os","path","child_process"],factory):factory(global.CryptoTS={},null,null,null,null,null,null,null)}(this,function(exports,fs,http,https,url,os,path,child_process){"use strict";
/**
     * @license xmlhttprequest-ts
     * MIT license
     */var XMLHttpRequest=function(){function XMLHttpRequest(){this.UNSENT=XMLHttpRequest.UNSENT,this.OPENED=XMLHttpRequest.OPENED,this.HEADERS_RECEIVED=XMLHttpRequest.HEADERS_RECEIVED,this.LOADING=XMLHttpRequest.LOADING,this.DONE=XMLHttpRequest.DONE,this.disableHeaderCheck=!1,this.readyState=XMLHttpRequest.UNSENT,this.responseText="",this.responseXML=null,this.status=0,this.statusText="",this.timeout=0,this.withCredentials=!1,this.defaultHeaders={"User-Agent":"ts-XMLHttpRequest",Accept:"*/*"},this.errorFlag=!1,this.forbiddenRequestHeaders=["accept-charset","accept-encoding","access-control-request-headers","access-control-request-method","connection","content-length","content-transfer-encoding","cookie","cookie2","date","expect","host","keep-alive","origin","referer","te","trailer","transfer-encoding","upgrade","via"],this.forbiddenRequestMethods=["TRACE","TRACK","CONNECT"],this.headers={},this.headersLowerCase={},this.listeners={},this.sendFlag=!1}return XMLHttpRequest.prototype.open=function(method,url$$1,async,user,password){if(void 0===async&&(async=!0),this.abort(),this.errorFlag=!1,!this.isAllowedHttpMethod(method))throw new Error("SecurityError: Request method not allowed");this.settings={method:method,url:url$$1,async:"boolean"!=typeof async||async,user:user,password:password},this.setState(this.OPENED)},XMLHttpRequest.prototype.setDisableHeaderCheck=function(state){this.disableHeaderCheck=state},XMLHttpRequest.prototype.setRequestHeader=function(header,value){if(this.readyState!==this.OPENED)throw new Error("INVALID_STATE_ERR: setRequestHeader can only be called when state is OPEN");if(this.isAllowedHttpHeader(header)){if(this.sendFlag)throw new Error("INVALID_STATE_ERR: send flag is true");header=this.headersLowerCase[header.toLowerCase()]||header,this.headersLowerCase[header.toLowerCase()]=header,this.headers[header]=this.headers[header]?this.headers[header]+", "+value:value}else console.warn('Refused to set unsafe header "'+header+'"')},XMLHttpRequest.prototype.getAllResponseHeaders=function(){if(this.readyState<this.HEADERS_RECEIVED||this.errorFlag)return null;var result="";if(this.response)for(var i in this.response.headers)if("set-cookie"!==i&&"set-cookie2"!==i){var headerValue=this.response.headers[i];"string"==typeof headerValue?result+=i+": "+headerValue+"\r\n":Array.isArray(headerValue)?result+=i+": "+headerValue.join(", ")+"\r\n":result+=i+":\r\n"}return result.substr(0,result.length-2)},XMLHttpRequest.prototype.getResponseHeader=function(header){if("string"==typeof header&&this.readyState>this.OPENED&&this.response&&this.response.headers&&this.response.headers[header.toLowerCase()]&&!this.errorFlag){var responseHeader=this.response.headers[header.toLowerCase()];if("string"==typeof responseHeader)return responseHeader;if(Array.isArray(responseHeader))return responseHeader.join(", ")}return null},XMLHttpRequest.prototype.getRequestHeader=function(name){if("string"==typeof name&&this.headersLowerCase[name.toLowerCase()])return this.headers[this.headersLowerCase[name.toLowerCase()]]},XMLHttpRequest.prototype.send=function(data){var _this=this,self=this;if(void 0===this.settings)throw new Error("INVALID_STATE_ERR: connection must be opened before send() is called");if(this.readyState!==this.OPENED)throw new Error("INVALID_STATE_ERR: connection must be opened before send() is called");if(this.sendFlag)throw new Error("INVALID_STATE_ERR: send has already been called");var host,ssl=!1,local=!1,url$$1=url.parse(this.settings.url);switch(url$$1.protocol){case"https:":ssl=!0;case"http:":host=url$$1.hostname;break;case"file:":local=!0;break;case void 0:case null:case"":host="localhost";break;default:throw new Error("Protocol not supported.")}if(local){if("GET"!==this.settings.method)throw new Error("XMLHttpRequest: Only GET method is supported");if(this.settings.async)fs.readFile(unescape(url$$1.pathname||"/"),"utf8",function(error,fileData){error?self.handleError(error):(self.status=200,self.responseText=fileData,self.setState(self.DONE))});else try{this.responseText=fs.readFileSync(unescape(url$$1.pathname||"/"),"utf8"),this.status=200,this.setState(self.DONE)}catch(e){this.handleError(e)}}else{var port=url$$1.port||(ssl?443:80),uri=url$$1.pathname+(url$$1.search?url$$1.search:"");for(var name_1 in this.defaultHeaders)this.headersLowerCase[name_1.toLowerCase()]||(this.headers[name_1]=this.defaultHeaders[name_1]);if(host&&(this.headers.Host=host),url$$1.host&&"["===url$$1.host[0]&&(this.headers.Host="["+this.headers.Host+"]"),ssl&&443===port||80===port||(this.headers.Host+=":"+url$$1.port),this.settings.user){void 0===this.settings.password&&(this.settings.password="");var authBuf=Buffer.from(this.settings.user+":"+this.settings.password);this.headers.Authorization="Basic "+authBuf.toString("base64")}"GET"===this.settings.method||"HEAD"===this.settings.method?data=null:data?(this.headers["Content-Length"]=""+(Buffer.isBuffer(data)?data.length:Buffer.byteLength(data)),this.getRequestHeader("Content-Type")||(this.headers["Content-Type"]="text/plain;charset=UTF-8")):"POST"===this.settings.method&&(this.headers["Content-Length"]="0");var options={host:host,port:port,path:uri,method:this.settings.method,headers:this.headers,agent:!1,withCredentials:this.withCredentials};if(this.errorFlag=!1,this.settings.async){1<=this.timeout&&(this.timeoutTimer=setTimeout(function(){_this.readyState!==_this.DONE&&self.handleTimeout(new Error("request timed out after "+_this.timeout+"ms"))},this.timeout));var doRequest_1=ssl?https.request:http.request;this.sendFlag=!0,self.dispatchEvent("readystatechange");var errorHandler_1=function(error){self.handleError(error)},redirectCount_1=0,responseHandler_1=function(resp){if(self.response=resp,void 0===self.settings)throw new Error("INVALID_STATE_ERR: connection must be opened before send() is called");if(self.response.headers.location&&(301===self.response.statusCode||302===self.response.statusCode||303===self.response.statusCode||307===self.response.statusCode)){if(10<=++redirectCount_1)throw new Error("XMLHttpRequest: Request failed - too many redirects");self.settings.url=self.response.headers.location;var parsedUrl=url.parse(self.settings.url);(host=parsedUrl.hostname)&&(self.headers.Host=host);var newOptions={hostname:parsedUrl.hostname,port:parsedUrl.port,path:parsedUrl.path,method:303===self.response.statusCode?"GET":self.settings.method,headers:self.headers,withCredentials:self.withCredentials};return ssl="https:"===url$$1.protocol,doRequest_1=ssl?https.request:http.request,self.request=doRequest_1(newOptions,responseHandler_1).on("error",errorHandler_1),void self.request.end()}self.response.setEncoding("utf8"),self.setState(self.HEADERS_RECEIVED),self.status=self.response.statusCode||0,self.response.on("data",function(chunk){chunk&&(self.responseText+=chunk),self.sendFlag&&self.setState(self.LOADING)}),self.response.on("end",function(){self.sendFlag&&(self.setState(self.DONE),self.sendFlag=!1)}),self.response.on("error",function(error){self.handleError(error)})};self.request=doRequest_1(options,responseHandler_1).on("error",errorHandler_1),data&&self.request.write(data),self.request.end(),self.dispatchEvent("loadstart")}else{var startTime=(new Date).getTime(),contentFile_1=os.tmpdir()+path.sep+"ts-xmlhttprequest-content-"+process.pid,syncFile_1=os.tmpdir()+path.sep+"ts-xmlhttprequest-sync-"+process.pid;fs.writeFileSync(syncFile_1,"","utf8");var execString="let http = require('http'), https = require('https'), fs = require('fs');let doRequest = http"+(ssl?"s":"")+".request;let options = "+JSON.stringify(options)+";let responseText = '';let req = doRequest(options, function(response) {response.setEncoding('utf8');response.on('data', function(chunk) {    responseText += chunk;});response.on('end', function() {fs.writeFileSync(    '"+contentFile_1+"',    JSON.stringify({        err: null,        data: {statusCode: response.statusCode, headers: response.headers, text: responseText}    }),    'utf8');fs.unlinkSync('"+syncFile_1+"');});response.on('error', function(error) {fs.writeFileSync('"+contentFile_1+"', JSON.stringify({err: error}), 'utf8');fs.unlinkSync('"+syncFile_1+"');});}).on('error', function(error) {fs.writeFileSync('"+contentFile_1+"', JSON.stringify({err: error}), 'utf8');fs.unlinkSync('"+syncFile_1+"');});"+(data?"req.write('"+JSON.stringify(data).slice(1,-1).replace(/'/g,"\\'")+"');":"")+"req.end();";self.dispatchEvent("loadstart"),this.setState(self.LOADING);var syncProc=child_process.spawn(process.argv[0],["-e",execString]);for(syncProc.on("exit",function(code,signal){try{fs.unlinkSync(syncFile_1)}catch(e){}try{fs.unlinkSync(contentFile_1)}catch(e){}});fs.existsSync(syncFile_1);)if(0!==this.timeout&&(new Date).getTime()>=startTime+this.timeout)return syncProc.stdin.end(),syncProc.kill(),self.handleTimeout(new Error("request timed out after "+this.timeout+"ms"));syncProc.stdin.end(),syncProc.kill();var resp=JSON.parse(fs.readFileSync(contentFile_1,"utf8"));fs.unlinkSync(contentFile_1),resp.err?self.handleError(resp.err):(self.response=resp.data,self.status=resp.data.statusCode,self.responseText=resp.data.text,self.setState(self.DONE))}}},XMLHttpRequest.prototype.abort=function(){this.request&&(this.request.abort(),this.request=void 0),this.headers={},this.status=0,this.responseText="",this.responseXML=null,this.errorFlag=!0,this.readyState===this.UNSENT||this.readyState===this.OPENED&&!this.sendFlag||this.readyState===this.DONE||(this.sendFlag=!1,this.setState(this.DONE)),this.readyState=this.UNSENT,this.dispatchEvent("abort")},XMLHttpRequest.prototype.addEventListener=function(event,callback){event in this.listeners||(this.listeners[event]=[]),this.listeners[event].push(callback)},XMLHttpRequest.prototype.removeEventListener=function(event,callback){event in this.listeners&&(this.listeners[event]=this.listeners[event].filter(function(ev){return ev!==callback}))},XMLHttpRequest.prototype.dispatchEvent=function(event,parameter){var eventHandlerMethodName="on"+event;if("function"==typeof this[eventHandlerMethodName]&&this[eventHandlerMethodName](parameter),event in this.listeners)for(var i=0,len=this.listeners[event].length;i<len;i++)this.listeners[event][i].call(this,parameter)},XMLHttpRequest.prototype.setState=function(state){state!==this.LOADING&&this.readyState===state||(this.readyState=state,(this.settings&&this.settings.async||this.readyState<this.OPENED||this.readyState===this.DONE)&&this.dispatchEvent("readystatechange"),this.readyState===this.DONE&&(this.timeoutTimer&&(clearTimeout(this.timeoutTimer),this.timeoutTimer=void 0),this.errorFlag||this.dispatchEvent("load"),this.dispatchEvent("loadend")))},XMLHttpRequest.prototype.handleTimeout=function(error){this.request&&(this.request.abort(),this.request=void 0),this.status=0,this.statusText=error.toString(),this.responseText=error.stack||"",this.errorFlag=!0,this.dispatchEvent("timeout",error),this.setState(this.DONE)},XMLHttpRequest.prototype.handleError=function(error){this.status=0,this.statusText=error.toString(),this.responseText=error.stack||"",this.errorFlag=!0,this.dispatchEvent("error",error),this.setState(this.DONE)},XMLHttpRequest.prototype.isAllowedHttpHeader=function(header){return!0===(this.disableHeaderCheck||header&&-1===this.forbiddenRequestHeaders.indexOf(header.toLowerCase()))},XMLHttpRequest.prototype.isAllowedHttpMethod=function(method){return!0===(method&&-1===this.forbiddenRequestMethods.indexOf(method))},XMLHttpRequest.UNSENT=0,XMLHttpRequest.OPENED=1,XMLHttpRequest.HEADERS_RECEIVED=2,XMLHttpRequest.LOADING=3,XMLHttpRequest.DONE=4,XMLHttpRequest}();exports.XMLHttpRequest=XMLHttpRequest,Object.defineProperty(exports,"__esModule",{value:!0})});