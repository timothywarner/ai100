{"version":3,"sources":["src/common.speech/Transcription/ConversationConnectionMessage.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AAEzF,qBAAa,6BAA8B,SAAQ,iBAAiB;IAChE,OAAO,CAAC,2BAA2B,CAAS;gBAGxC,WAAW,EAAE,WAAW,EACxB,IAAI,EAAE,GAAG,EACT,OAAO,CAAC,EAAE,iBAAiB,CAAC,MAAM,CAAC,EACnC,EAAE,CAAC,EAAE,MAAM;IAQf,IAAW,uBAAuB,IAAI,MAAM,CAE3C;CACJ","file":"ConversationConnectionMessage.d.ts","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ConnectionMessage, IStringDictionary, MessageType } from \"../../common/Exports\";\r\n\r\nexport class ConversationConnectionMessage extends ConnectionMessage {\r\n    private privConversationMessageType: string;\r\n\r\n    public constructor(\r\n        messageType: MessageType,\r\n        body: any,\r\n        headers?: IStringDictionary<string>,\r\n        id?: string) {\r\n            super(messageType, body, headers, id);\r\n            const json = JSON.parse(this.textBody);\r\n            if (json.type !== undefined) {\r\n                this.privConversationMessageType = json.type;\r\n            }\r\n    }\r\n\r\n    public get conversationMessageType(): string {\r\n        return this.privConversationMessageType;\r\n    }\r\n}\r\n"]}