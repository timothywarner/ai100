{"version":3,"sources":["src/common.speech/Transcription/ServiceMessages/ParticipantResponsePayload.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;AAgClC,MAAM,OAAO,+BAA+B;IAGxC,YAAoB,IAAY;QAC5B,IAAI,CAAC,+BAA+B,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC5D,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,IAAY;QAC/B,OAAO,IAAI,+BAA+B,CAAC,IAAI,CAAC,CAAC;IACrD,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,+BAA+B,CAAC,MAAM,CAAC;IACvD,CAAC;IAED,IAAW,EAAE;QACT,OAAO,IAAI,CAAC,+BAA+B,CAAC,EAAE,CAAC;IACnD,CAAC;IAED,IAAW,OAAO;QACd,OAAO,IAAI,CAAC,+BAA+B,CAAC,OAAO,CAAC;IACxD,CAAC;IAED,IAAW,YAAY;QACnB,OAAO,IAAI,CAAC,+BAA+B,CAAC,YAAY,CAAC;IAC7D,CAAC;IAED,IAAW,KAAK;QACZ,OAAO,IAAI,CAAC,+BAA+B,CAAC,KAAK,CAAC;IACtD,CAAC;IAED,IAAW,WAAW;QAClB,OAAO,IAAI,CAAC,+BAA+B,CAAC,WAAW,CAAC;IAC5D,CAAC;IAED,IAAW,eAAe;QACtB,OAAO,IAAI,CAAC,+BAA+B,CAAC,eAAe,CAAC;IAChE,CAAC;IAED,IAAW,mBAAmB;QAC1B,OAAO,IAAI,CAAC,+BAA+B,CAAC,mBAAmB,CAAC;IACpE,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,IAAI,CAAC,+BAA+B,CAAC,UAAU,CAAC;IAC3D,CAAC;IAED,IAAW,OAAO;QACd,OAAO,IAAI,CAAC,+BAA+B,CAAC,OAAO,CAAC;IACxD,CAAC;IAED,IAAW,IAAI;QACX,OAAO,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC;IACrD,CAAC;CAEJ;AAED,iDAAiD;AACjD,MAAM,OAAO,0BAA0B;IAInC,YAAoB,IAAY;QAC5B,IAAI,CAAC,8BAA8B,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC3D,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,IAAY;QAC/B,OAAO,IAAI,0BAA0B,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC;IAED,IAAW,QAAQ;QACf,OAAO,IAAI,CAAC,8BAA8B,CAAC,QAAQ,CAAC;IACxD,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,8BAA8B,CAAC,MAAM,CAAC;IACtD,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,8BAA8B,CAAC,MAAM,CAAC;IACtD,CAAC;IAED,IAAW,OAAO;QACd,OAAO,IAAI,CAAC,8BAA8B,CAAC,OAAO,CAAC;IACvD,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,8BAA8B,CAAC,MAAM,CAAC;IACtD,CAAC;IAED,IAAW,aAAa;QACpB,OAAO,IAAI,CAAC,8BAA8B,CAAC,aAAa,CAAC;IAC7D,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,8BAA8B,CAAC,MAAM,CAAC;IACtD,CAAC;CACJ","file":"ParticipantResponsePayload.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the payload for incoming list of participants\r\n */\r\nexport interface IParticipantsListPayloadResponse {\r\n    roomid: string;\r\n    id: string;\r\n    command: string;\r\n    participants: IParticipantPayloadResponse[];\r\n    token: string;\r\n    translateTo: string[];\r\n    profanityFilter: string;\r\n    roomProfanityFilter: string;\r\n    roomLocked: boolean;\r\n    muteAll: boolean;\r\n    type: string;\r\n}\r\n\r\n/**\r\n * Defines the payload for incoming participant\r\n */\r\nexport interface IParticipantPayloadResponse {\r\n    nickname: string;\r\n    locale: string;\r\n    usetts: boolean;\r\n    ismuted: boolean;\r\n    ishost: boolean;\r\n    participantId: string;\r\n    avatar?: string;\r\n}\r\n\r\nexport class ParticipantsListPayloadResponse implements IParticipantsListPayloadResponse {\r\n    private privParticipantsPayloadResponse: IParticipantsListPayloadResponse;\r\n\r\n    private constructor(json: string) {\r\n        this.privParticipantsPayloadResponse = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): ParticipantsListPayloadResponse {\r\n        return new ParticipantsListPayloadResponse(json);\r\n    }\r\n\r\n    public get roomid(): string {\r\n        return this.privParticipantsPayloadResponse.roomid;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privParticipantsPayloadResponse.id;\r\n    }\r\n\r\n    public get command(): string {\r\n        return this.privParticipantsPayloadResponse.command;\r\n    }\r\n\r\n    public get participants(): IParticipantPayloadResponse[] {\r\n        return this.privParticipantsPayloadResponse.participants;\r\n    }\r\n\r\n    public get token(): string {\r\n        return this.privParticipantsPayloadResponse.token;\r\n    }\r\n\r\n    public get translateTo(): string[] {\r\n        return this.privParticipantsPayloadResponse.translateTo;\r\n    }\r\n\r\n    public get profanityFilter(): string {\r\n        return this.privParticipantsPayloadResponse.profanityFilter;\r\n    }\r\n\r\n    public get roomProfanityFilter(): string {\r\n        return this.privParticipantsPayloadResponse.roomProfanityFilter;\r\n    }\r\n\r\n    public get roomLocked(): boolean {\r\n        return this.privParticipantsPayloadResponse.roomLocked;\r\n    }\r\n\r\n    public get muteAll(): boolean {\r\n        return this.privParticipantsPayloadResponse.muteAll;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privParticipantsPayloadResponse.type;\r\n    }\r\n\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class ParticipantPayloadResponse implements IParticipantPayloadResponse {\r\n\r\n    private privParticipantPayloadResponse: IParticipantPayloadResponse;\r\n\r\n    private constructor(json: string) {\r\n        this.privParticipantPayloadResponse = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): ParticipantPayloadResponse {\r\n        return new ParticipantPayloadResponse(json);\r\n    }\r\n\r\n    public get nickname(): string {\r\n        return this.privParticipantPayloadResponse.nickname;\r\n    }\r\n\r\n    public get locale(): string {\r\n        return this.privParticipantPayloadResponse.locale;\r\n    }\r\n\r\n    public get usetts(): boolean {\r\n        return this.privParticipantPayloadResponse.usetts;\r\n    }\r\n\r\n    public get ismuted(): boolean {\r\n        return this.privParticipantPayloadResponse.ismuted;\r\n    }\r\n\r\n    public get ishost(): boolean {\r\n        return this.privParticipantPayloadResponse.ishost;\r\n    }\r\n\r\n    public get participantId(): string {\r\n        return this.privParticipantPayloadResponse.participantId;\r\n    }\r\n\r\n    public get avatar(): string {\r\n        return this.privParticipantPayloadResponse.avatar;\r\n    }\r\n}\r\n"]}