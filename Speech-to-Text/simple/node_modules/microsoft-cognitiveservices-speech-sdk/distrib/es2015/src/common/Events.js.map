{"version":3,"sources":["src/common/Events.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;AAElC,OAAO,EAAE,iBAAiB,EAAE,MAAM,SAAS,CAAC;AAC5C,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAI5C,MAAM,OAAO,MAAM;IAWR,MAAM,KAAK,QAAQ;QACtB,OAAO,MAAM,CAAC,YAAY,CAAC;IAC/B,CAAC;;AAZc,mBAAY,GAAgC,IAAI,WAAW,EAAiB,CAAC;AAE9E,qBAAc,GAAG,CAAC,WAAwC,EAAQ,EAAE;IAC9E,IAAI,CAAC,WAAW,EAAE;QACd,MAAM,IAAI,iBAAiB,CAAC,aAAa,CAAC,CAAC;KAC9C;IAED,MAAM,CAAC,YAAY,GAAG,WAAW,CAAC;AACtC,CAAC,CAAA","file":"Events.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ArgumentNullError } from \"./Error\";\r\nimport { EventSource } from \"./EventSource\";\r\nimport { IEventSource } from \"./IEventSource\";\r\nimport { PlatformEvent } from \"./PlatformEvent\";\r\n\r\nexport class Events {\r\n    private static privInstance: IEventSource<PlatformEvent> = new EventSource<PlatformEvent>();\r\n\r\n    public static setEventSource = (eventSource: IEventSource<PlatformEvent>): void => {\r\n        if (!eventSource) {\r\n            throw new ArgumentNullError(\"eventSource\");\r\n        }\r\n\r\n        Events.privInstance = eventSource;\r\n    }\r\n\r\n    public static get instance(): IEventSource<PlatformEvent> {\r\n        return Events.privInstance;\r\n    }\r\n}\r\n"]}