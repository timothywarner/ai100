{"version":3,"sources":["src/sdk/Audio/IPlayer.ts"],"names":[],"mappings":"AAGA;;;;GAIG;AACH,MAAM,WAAW,OAAO;IACpB;;;;;OAKG;IACH,KAAK,IAAI,IAAI,CAAC;IAEd;;;;;OAKG;IACH,MAAM,CAAC,EAAE,CAAC,EAAE,MAAM,IAAI,EAAE,GAAG,CAAC,EAAE,CAAC,KAAK,EAAE,MAAM,KAAK,IAAI,GAAG,IAAI,CAAC;IAE7D;;;;;OAKG;IACH,YAAY,EAAE,CAAC,MAAM,EAAE,OAAO,KAAK,IAAI,CAAC;IAExC;;;;;OAKG;IACH,UAAU,EAAE,CAAC,MAAM,EAAE,OAAO,KAAK,IAAI,CAAC;IAEtC;;;;;;OAMG;IACH,WAAW,EAAE,MAAM,CAAC;CACvB","file":"IPlayer.d.ts","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Represents audio player interface to control the audio playback, such as pause, resume, etc.\r\n * @interface IPlayer\r\n * Added in version 1.12.0\r\n */\r\nexport interface IPlayer {\r\n    /**\r\n     * Pauses the audio playing\r\n     * @member IPlayer.pause\r\n     * @function\r\n     * @public\r\n     */\r\n    pause(): void;\r\n\r\n    /**\r\n     * Resumes the audio playing\r\n     * @member IPlayer.resume\r\n     * @function\r\n     * @public\r\n     */\r\n    resume(cb?: () => void, err?: (error: string) => void): void;\r\n\r\n    /**\r\n     * Defines event handler audio playback start event.\r\n     * @member IPlayer.prototype.onAudioStart\r\n     * @function\r\n     * @public\r\n     */\r\n    onAudioStart: (sender: IPlayer) => void;\r\n\r\n    /**\r\n     * Defines event handler audio playback end event.\r\n     * @member IPlayer.prototype.onAudioEnd\r\n     * @function\r\n     * @public\r\n     */\r\n    onAudioEnd: (sender: IPlayer) => void;\r\n\r\n    /**\r\n     * Gets the current play audio offset.\r\n     * @member IPlayer.prototype.currentTime\r\n     * @function\r\n     * @public\r\n     * @returns {number} The current play audio offset, in second\r\n     */\r\n    currentTime: number;\r\n}\r\n"]}