{"version":3,"sources":["src/sdk/PhraseListGrammar.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;AAQlC;;;;;GAKG;AACH,MAAM,OAAO,iBAAiB;IAG1B,YAAoB,SAAgC;QAChD,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC,cAAc,CAAC;IACvD,CAAC;IAED;;;OAGG;IACI,MAAM,CAAC,cAAc,CAAC,UAAsB;QAC/C,MAAM,QAAQ,GAA0B,UAAU,CAAC,YAAqC,CAAC;QAEzF,OAAO,IAAI,iBAAiB,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC;IAED;;;OAGG;IACI,SAAS,CAAC,MAAc;QAC3B,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAC9C,CAAC;IAED;;;OAGG;IACI,UAAU,CAAC,OAAiB;QAC/B,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IAC/C,CAAC;IAED;;OAEG;IACI,KAAK;QACR,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;IAC3C,CAAC;CACJ","file":"PhraseListGrammar.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    DynamicGrammarBuilder,\r\n    ServiceRecognizerBase,\r\n} from \"../common.speech/Exports\";\r\nimport { Recognizer } from \"./Exports\";\r\n\r\n/**\r\n * Allows additions of new phrases to improve speech recognition.\r\n *\r\n * Phrases added to the recognizer are effective at the start of the next recognition, or the next time the SpeechSDK must reconnect\r\n * to the speech service.\r\n */\r\nexport class PhraseListGrammar {\r\n    private privGrammerBuilder: DynamicGrammarBuilder;\r\n\r\n    private constructor(recogBase: ServiceRecognizerBase) {\r\n        this.privGrammerBuilder = recogBase.dynamicGrammar;\r\n    }\r\n\r\n    /**\r\n     * Creates a PhraseListGrammar from a given speech recognizer. Will accept any recognizer that derives from @class Recognizer.\r\n     * @param recognizer The recognizer to add phrase lists to.\r\n     */\r\n    public static fromRecognizer(recognizer: Recognizer): PhraseListGrammar {\r\n        const recoBase: ServiceRecognizerBase = recognizer.internalData as ServiceRecognizerBase;\r\n\r\n        return new PhraseListGrammar(recoBase);\r\n    }\r\n\r\n    /**\r\n     * Adds a single phrase to the current recognizer.\r\n     * @param phrase Phrase to add.\r\n     */\r\n    public addPhrase(phrase: string): void {\r\n        this.privGrammerBuilder.addPhrase(phrase);\r\n    }\r\n\r\n    /**\r\n     * Adds multiple phrases to the current recognizer.\r\n     * @param phrases Array of phrases to add.\r\n     */\r\n    public addPhrases(phrases: string[]): void {\r\n        this.privGrammerBuilder.addPhrase(phrases);\r\n    }\r\n\r\n    /**\r\n     * Clears all phrases added to the current recognizer.\r\n     */\r\n    public clear(): void {\r\n        this.privGrammerBuilder.clearPhrases();\r\n    }\r\n}\r\n"]}