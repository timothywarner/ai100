{"version":3,"sources":["src/common.browser/RestConfigBase.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;AA6BlC,MAAM,OAAO,cAAc;IAEhB,MAAM,KAAK,cAAc;QAC5B,OAAO,cAAc,CAAC,yBAAyB,CAAC;IACpD,CAAC;IAEM,MAAM,KAAK,YAAY;QAC1B,OAAO,cAAc,CAAC,iBAAiB,CAAC;IAC5C,CAAC;IAEM,MAAM,KAAK,UAAU;QACxB,OAAO,cAAc,CAAC,cAAc,CAAC;IACzC,CAAC;;AAEuB,wCAAyB,GAAoB;IACjE,OAAO,EAAE;QACL,MAAM,EAAE,kBAAkB;KAC7B;IACD,WAAW,EAAE,KAAK;IAClB,OAAO,EAAE,KAAK;CACjB,CAAC;AAEsB,6BAAc,GAAmB;IACrD,0BAA0B,EAAE,iGAAiG;IAC7H,6BAA6B,EAAE,sDAAsD;IACrF,WAAW,EAAE,kCAAkC;IAC/C,qCAAqC,EAAE,0DAA0D;IACjG,yBAAyB,EAAE,0CAA0C;IACrE,uBAAuB,EAAE,iCAAiC;IAC1D,4BAA4B,EAAE,kEAAkE;IAChG,2BAA2B,EAAE,+DAA+D;IAC5F,oBAAoB,EAAE,kEAAkE;IACxF,qBAAqB,EAAE,6DAA6D;CACvF,CAAC;AAEsB,gCAAiB,GAAgB;IACrD,UAAU,EAAE,aAAa;IACzB,aAAa,EAAE,eAAe;IAC9B,WAAW,EAAE,eAAe;IAC5B,cAAc,EAAE,cAAc;IAC9B,aAAa,EAAE,iBAAiB;IAChC,YAAY,EAAE,UAAU;IACxB,QAAQ,EAAE,UAAU;IACpB,SAAS,EAAE,WAAW;IACtB,SAAS,EAAE,aAAa;IACxB,MAAM,EAAE,QAAQ;IAChB,YAAY,EAAE,OAAO;IACrB,eAAe,EAAE,2BAA2B;IAC5C,kBAAkB,EAAE,8BAA8B;IAClD,KAAK,EAAE,eAAe;CACzB,CAAC","file":"RestConfigBase.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IErrorMessages } from \"../common/Exports\";\r\n/**\r\n * HTTP request helper\r\n */\r\nexport interface IRequestOptions {\r\n    headers?: {[key: string]: string};\r\n    ignoreCache?: boolean;\r\n    timeout?: number;\r\n}\r\n\r\nexport interface IRestParams {\r\n    apiVersion: string;\r\n    authorization: string;\r\n    clientAppId: string;\r\n    contentTypeKey: string;\r\n    correlationId: string;\r\n    languageCode: string;\r\n    nickname: string;\r\n    profanity: string;\r\n    requestId: string;\r\n    roomId: string;\r\n    sessionToken: string;\r\n    subscriptionKey: string;\r\n    subscriptionRegion: string;\r\n    token: string;\r\n}\r\n\r\nexport class RestConfigBase {\r\n\r\n    public static get requestOptions(): IRequestOptions {\r\n        return RestConfigBase.privDefaultRequestOptions;\r\n    }\r\n\r\n    public static get configParams(): IRestParams {\r\n        return RestConfigBase.privDefaultParams;\r\n    }\r\n\r\n    public static get restErrors(): IErrorMessages {\r\n        return RestConfigBase.privRestErrors;\r\n    }\r\n\r\n    private static readonly privDefaultRequestOptions: IRequestOptions = {\r\n        headers: {\r\n            Accept: \"application/json\",\r\n        },\r\n        ignoreCache: false,\r\n        timeout: 10000,\r\n    };\r\n\r\n    private static readonly privRestErrors: IErrorMessages = {\r\n        authInvalidSubscriptionKey: \"You must specify either an authentication token to use, or a Cognitive Speech subscription key.\",\r\n        authInvalidSubscriptionRegion: \"You must specify the Cognitive Speech region to use.\",\r\n        invalidArgs: \"Required input not found: {arg}.\",\r\n        invalidCreateJoinConversationResponse: \"Creating/Joining conversation failed with HTTP {status}.\",\r\n        invalidParticipantRequest: \"The requested participant was not found.\",\r\n        permissionDeniedConnect: \"Required credentials not found.\",\r\n        permissionDeniedConversation: \"Invalid operation: only the host can {command} the conversation.\",\r\n        permissionDeniedParticipant: \"Invalid operation: only the host can {command} a participant.\",\r\n        permissionDeniedSend: \"Invalid operation: the conversation is not in a connected state.\",\r\n        permissionDeniedStart: \"Invalid operation: there is already an active conversation.\",\r\n    };\r\n\r\n    private static readonly privDefaultParams: IRestParams = {\r\n        apiVersion: \"api-version\",\r\n        authorization: \"Authorization\",\r\n        clientAppId: \"X-ClientAppId\",\r\n        contentTypeKey: \"Content-Type\",\r\n        correlationId: \"X-CorrelationId\",\r\n        languageCode: \"language\",\r\n        nickname: \"nickname\",\r\n        profanity: \"profanity\",\r\n        requestId: \"X-RequestId\",\r\n        roomId: \"roomid\",\r\n        sessionToken: \"token\",\r\n        subscriptionKey: \"Ocp-Apim-Subscription-Key\",\r\n        subscriptionRegion: \"Ocp-Apim-Subscription-Region\",\r\n        token: \"X-CapitoToken\",\r\n    };\r\n\r\n}\r\n"]}